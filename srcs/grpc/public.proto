syntax = "proto3";

package grpc;

option go_package = "pkg/rpc/grpc";

import "message/request/get_hardware_resource_request.proto";
import "message/request/get_info_resource_request.proto";
import "message/request/get_module_list_request.proto";
import "message/request/get_using_hardware_resource_by_process_request.proto";
import "message/request/get_using_info_resource_by_process_request.proto";
import "message/request/get_manager_log_request.proto";
import "message/request/get_module_log_request.proto";
import "message/request/get_group_id_request.proto";
import "message/request/get_service_name_request.proto";


import "message/response/get_hardware_resource_response.proto";
import "message/response/get_info_resource_response.proto";
import "message/response/get_module_list_response.proto";
import "message/response/get_using_hardware_resource_by_process_response.proto";
import "message/response/get_using_info_resource_by_process_response.proto";
import "message/response/get_manager_log_response.proto";
import "message/response/get_group_id_response.proto";
import "message/response/get_service_name_response.proto";
import "message/response/get_module_log_response.proto";

service PublicService {
	rpc GetHardwareResource(request.GetHardwareResourceRequest) returns (response.GetHardwareResourceResponse) {}
	rpc GetInfoResource(request.GetInfoResourceRequest) returns (response.GetInfoResourceResponse) {}
	rpc GetModuleList(request.GetModuleListRequest) returns(response.GetModuleListResponse)  {}
	rpc GetUsingHardwareResource_by_process(request.GetUsingHardwareResourceByProcessRequest) returns (response.GetUsingHardwareResourceByProcessResponse) {}
	rpc GetUsingInfoResouce_by_process(request.GetUsingInfoResourceByProcessRequest) returns (response.GetUsingInfoResourceByProcessResponse) {}
	rpc GetManagerLog(request.GetManagerLogRequest) returns (response.GetManagerLogResponse) {}
	rpc GetModuleLog(request.GetModuleLogRequest) returns (response.GetModuleLogResponse) {}
 	rpc GetGroupId(request.GetGroupIdRequest) returns (response.GetGroupIdResponse) {}
	rpc GetServiceName(request.GetServiceNameRequest) returns (response.GetServiceNameResponse) {}	
}
